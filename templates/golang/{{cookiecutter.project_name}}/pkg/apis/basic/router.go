// Package basic ...
package basic

import (
	"github.com/gin-gonic/gin"
	"github.com/prometheus/client_golang/prometheus/promhttp"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
	// docs is generated by Swag CLI, you have to import it.
	_ "bk.tencent.com/{{cookiecutter.project_name}}/docs"

	"bk.tencent.com/{{cookiecutter.project_name}}/pkg/apis/basic/handler"
	"bk.tencent.com/{{cookiecutter.project_name}}/pkg/config"
	"bk.tencent.com/{{cookiecutter.project_name}}/pkg/middleware"
)

// Register ...
func Register(router *gin.Engine) {
	// basic
	router.GET("/ping", handler.Ping)
	router.GET("/version", handler.Version)

	// healthz
	healthzRouter := router.Group("/healthz")
	healthzRouter.Use(middleware.QueryTokenAuth(config.G.Service.HealthzToken))
	healthzRouter.GET("", handler.Healthz)

	// metrics
	metricRouter := router.Group("/metrics")
	metricRouter.Use(middleware.QueryTokenAuth(config.G.Service.MetricToken))
	metricRouter.GET("", gin.WrapH(promhttp.Handler()))

	// swagger docs（仅推荐开发环境使用）
	if config.G.Service.EnableSwagger {
		router.StaticFile("/swagger.json", config.G.Service.DocFileBaseDir+"/swagger.json")
		router.GET(
			"/swagger-ui/*any",
			ginSwagger.WrapHandler(swaggerFiles.Handler, ginSwagger.URL("/swagger.json")),
		)
	}
}
